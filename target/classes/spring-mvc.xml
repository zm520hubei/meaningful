<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                         http://www.springframework.org/schema/tx   
       					http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
                         <!-- 启用spring mvc 注解-->  
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.z.mif" />
	<context:component-scan base-package="com.z.mif.util" />
	
		<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

 	<tx:annotation-driven transaction-manager="transactionManager"/>  
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 这是拦截URL 都可以配置多个 -->
			<mvc:mapping path="/u/**" ></mvc:mapping>
			<!-- 这是不拦截的URL -->
<!-- 		<mvc:exclude-mapping path=""/>  -->
			<bean id="userInterceptor" class="com.z.mif.interceptor.UserInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<mvc:view-controller path="/" view-name="redirect:/list" />  
	
	
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	
    
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/pages/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!--  静态文件访问,主要是让DispatcherServlet不拦截以下静态资源 -->
	<mvc:resources location="/image/" mapping="/image/**"/> 
	<mvc:resources location="/css/" mapping="/css/**"/> 
	<mvc:resources location="/js/" mapping="/js/**"/>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值  1M   单位 字节-->
		<property name="maxUploadSize" value="1048576" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
<!-- 	<import resource="spring-webSocket.xml"/>	 -->
</beans>  